http://www.phpschool.com/gnuboard4/bbs/board.php?bo_table=qna_function&wr_id=408526&sca=&sfl=wr_subject%7C%7Cwr_content&stx=&sop=and

doInBackground 내부에서 HttpClient객체를 생성하고 있으시네요. 그 이야기는 뭐냐면 매번 새로운 task가 실행될 때 마다 브라우저를 꺼버리고 다시 켜서 작업하시는것과 동일한 상황입니다.
post로 웹서버에 어떤 데이터를 전송했다는 의미는 웹서버의 특정페이지를 요청할 때 요청주소와 동시에 어떤 데이터를 붙여서 전송했다는 의미입니다.
그리고 지금 하시는것은 그렇게 전송된 데이터를 세션변수와 비교하시겠다고 하셨는데 결론적으로 말씀드리면 그렇게는 불가능합니다.

일단, 세션이라는것은 특별이 옵션을 바꾸지 않으면, 브라우저를 꺼버리면 끊어지는 것입니다. 한마디로 task마다 세션이 끊어지는 상황이라는 것이죠. 더 정확히는 모든 웹페이지 요청시마다 쿠키를 이용해서 세션 고유번호를 같이 전송해서 요청해야 합니다. http header라는 부분을 이용해서 요청할 때 같이 전송하죠.

여기서 한번 정리하고 가자면, http요청이라는것은 웹서버에 어떤 주소(url)를 보내서 그 주소의 어떤 정보를 요구하는 것이고,
http-post라는것은 위와같이 어떤주소(url)을 보내고 그 뒤(post)에 이어서 어떤 데이터를 같이 보내는 것을 말합니다.
그리고 모든 post를 포함한 http요청은 그와 동시에 http header라는것을 보낼수 있는 공간이 또 따로 있습니다.

httpclient가 아닌 진짜 사람이 웹브라우저를 사용할 때 세션이 유지되는 이유는, 어떤 웹사이트에 접속했을 때
웹사이트는 자동으로 세션ID라는 고유키를 새로 생성해서 웹브라우저=사람에게 보내줍니다. 그러면 웹브라우저는 그 id값을 저장하고 있다가 사람이 어떤 클릭이라던가 해서 다른 페이지를 다시 요청할 때 그때마다 일일히 그 id값을 같이 보내줍니다.

그렇기 때문에 웹서버 입장에서는 웹브라우저가 보내준 그 세션id라는 쿠키값을 이용해서, 이 값은 내가(웹서버) 아까 만들어 보내준 id값과 같다라는 사실을 인식해서, 아까 접속한 사람과 같은사람이 또 접속했다는 사실을 감지하는 것입니다.
그것이 세션이죠, 세션변수라는것은 그렇게 특정 사람마다 공유하는 변수입니다.
세션 id가 없거나 다르면 다른사람으로 인식되어서 각 사람마다 다른 값을 저장하고, 같은사람이면 같은값을 공유하는게 세션변수입니다.

그러므로 애초에 post전송값을 세션변수와 비교하시겠다고 하셨는데, 그럴려면 위와같이 세션이 정상적으로 동작하는 상황에서나 비교가 가능한 것입니다.
따라서 httpClient를 사용하실때, 최초 첫번째 요청에서 리턴된 responsePost 값에 접근해 보시면 서버에서 보내온 세션Id라는 쿠키값을 확인하실 수 있습니다. 그걸 어딘가 없어지지 않는곳에다 저장해 두셨다가 다음번 httpClient요청시에는 그 저장해두었던 값을 다시 넣어서 요청하셔야 합니다.

그렇게 하시면 서버에서 세션 변수가 계속 유지되는것을 확인하실 수 있습니다.

그런데 그렇게 일단 세션변수가 정상동작하시는것까지 성공하시게 되면, 엑티비티가 변경되었다고 해도
매번 id pw를 post로 다시 전송하실 필요도 없어집니다. 왜냐면 엑티비티가 변경되어도 쿠키로 가져온 세션id를
잃어버리지 않도록 엑티비티 이동과 상관없는 장소에 세션id를 저장해 두셔야만 세션변수가 정상동작 하는데,
그렇게까지 하셨다면 그냥 세션id만으로도 로그인이 된 것으로 보아도 상관없습니다.

최초로 딱 한번 id/pw를 전송하시고, 서버에서는 id/pw를 확인해 정상계정이면 세변변수에 아무값이나 넣으시면 됩니다.
예를들어 세션변수명이 isLogin이고 Y값을 저장하시면 그만이죠, 물론 id/pw가 틀린경우는 세션을 지우거나 세션변수isLogin값을 N으로 설정하셔야 하구요.
그렇게 되면 안드로이드가 액티비티를 이동했더라도 이동된 액티비티에서 새로운 http요청을 할 때 위에 설명드린대로 쿠키에 세션id값을 다시 전송하기만 하면, 서버에서는 해당 세션id에 해당하는 isLogin값이 Y인지만 확인해서 로그인 된 것으로 간주하면 되기 때문입니다. 굳이 id/pw를 다시 비교할 필요가 없죠,
isLogin값은 세션id별로 만들어 지기 떄문이죠

***************************************************************************************************
2.쿠키
http://www.androidpub.com/2217544



//TODO:세션유지 됨. HttpGet request = new HttpGet("http://www.clien.net/cs2/modules/my_comment.php");
//TODO:이렇게보내니까 뭔가 다른 결과를 던져줌 아마도 된듯!!
//TODO:request.setHeader ("Cookie", "PHPSESSID=" + storeCookie.getValue().substring(10,cookie.getValue().indexOf("; path=/")));

3. jericho로 html 파싱:
http://sunphiz.me/wp/archives/1090
http://kcizzang.tistory.com/entry/안드로이드-유튜브-파싱jericho-이용